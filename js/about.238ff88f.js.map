{"version":3,"sources":["webpack:///./src/views/Result.vue","webpack:///./src/views/Result.vue?8a22"],"names":["class","side","name","categoryColor","category","fooddata","item","style","key","ID","src","Picture","PictureUrl1","HotelName","City","setup","route","selectCategory","selectLocation","axios","getCategoryCountry","get","params","city","then","res","value","temp","data","filter","i","random","sort","Math","ary","slice","__exports__","render","QItem","QItemSection","QIcon","QCard","QCardSection"],"mappings":"iIAOOA,MAAM,uD,aAOAA,MAAM,kB,GAEHA,MAAM,e,uOAfpB,eAKS,Q,wBAJP,iBAEiB,CAFjB,eAEiB,GAFDC,KAAA,IAAI,C,wBAClB,iBAAuD,CAAvD,eAAuD,GAA/CC,KAAK,SAAUF,MAAK,eAAE,EAAAG,gB,4BAEhC,eAA6D,GAA7CH,MAAM,WAAS,C,wBAAC,iBAAY,C,8BAAV,EAAAI,UAAQ,O,gBAE5C,eAaM,MAbN,EAaM,E,mBAZJ,eAWS,2BAV4B,EAAAC,UAAQ,SAAhBC,G,wBAD7B,eAWS,GAXDN,MAAM,+BACdO,MAAA,iBAAgDC,IAAKF,EAAKG,I,yBACxD,iBAC8D,CAD9D,eAC8D,OADxDC,IAAKJ,EAAKK,QAAQC,YACxBL,MAAA,gE,UACA,eAMiB,Q,wBALf,iBAAgC,CAAhC,eAAgC,0BAAvBD,EAAKO,WAAS,GACvB,eAGM,MAHN,EAGM,CAFJ,eAAmD,GAA3CX,KAAK,QAAQF,MAAM,iBAC3B,eAA8C,OAA9C,EAA8C,eAAlBM,EAAKQ,MAAI,S,kGAgBhC,GACbC,MADa,WAEX,IAAMC,EAAQ,iBACRC,EAAiB,eAAI,MACrBC,EAAiB,eAAI,MACrBb,EAAW,eAAI,IACfD,EAAW,eAAI,MACfD,EAAgB,eAAI,MACpBgB,EAAQ,eAAO,SACfC,EAAqB,WACzBD,EAAME,IAAN,uDAA0DL,EAAMM,OAAOhB,KAAvE,YAA+EU,EAAMM,OAAOC,OAAQC,MAAK,SAACC,GACxG,OAAQT,EAAMM,OAAOhB,MACnB,IAAK,aACHF,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,cACtB,MACF,IAAK,QACHtB,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,iBACtB,MACF,IAAK,WACHtB,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,eACtB,MACF,QACEtB,EAASsB,MAAQ,GACjBvB,EAAcuB,MAAQ,GAE1B,IAAMC,EAAOF,EAAIG,KAAKC,QAAO,SAACC,GAAD,OAAOA,EAAEnB,QAAQC,eACxCmB,EAASJ,EAAKK,MAAK,kBAAMC,KAAKF,SAAW,MACzCG,EAAMH,EAAOI,MAAM,EAAG,IAC5B9B,EAASqB,MAAQQ,MASrB,OANA,eAAMlB,GAAO,WACXI,OAEF,gBAAU,WACRA,OAEK,CACLA,qBACAH,iBACAC,iBACAb,WACAD,WACAD,mB,sGCzEN,MAAMiC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,eAOf,IAAS,EAAQ,aAAc,CAACC,QAAA,KAAMC,eAAA,KAAaC,QAAA,KAAMC,QAAA,KAAMC,eAAA","file":"js/about.238ff88f.js","sourcesContent":["<template>\r\n  <q-item>\r\n    <q-item-section side>\r\n      <q-icon name=\"square\" :class=\"categoryColor\" ></q-icon>\r\n    </q-item-section>\r\n    <q-item-section class=\"text-h6\">{{category}}</q-item-section>\r\n  </q-item>\r\n  <div class=\"q-pa-md row justify-between items-start q-gutter-md\">\r\n    <q-card class=\"my-card drop-shadow col-md-2\"\r\n    style=\"height:243px;\" v-for=\"item in fooddata\" :key=\"item.ID\">\r\n      <img :src=\"item.Picture.PictureUrl1\"\r\n      style=\"height:137px;object-fit: cover;border:12px solid #fff\">\r\n      <q-card-section>\r\n        <div >{{ item.HotelName }}</div>\r\n        <div class=\"text-subtitle2\">\r\n          <q-icon name=\"place\" class=\"text-primary\"></q-icon>\r\n          <span class=\"text-accent\">{{item.City}}</span>\r\n        </div>\r\n      </q-card-section>\r\n    </q-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  ref,\r\n  onMounted,\r\n  inject,\r\n  watch,\r\n} from 'vue';\r\nimport { useRoute } from 'vue-router';\r\n\r\nexport default {\r\n  setup() {\r\n    const route = useRoute();\r\n    const selectCategory = ref(null);\r\n    const selectLocation = ref(null);\r\n    const fooddata = ref({});\r\n    const category = ref(null);\r\n    const categoryColor = ref(null);\r\n    const axios = inject('axios');// inject axios\r\n    const getCategoryCountry = () => {\r\n      axios.get(`https://ptx.transportdata.tw/MOTC/v2/Tourism/${route.params.item}/${route.params.city}`).then((res) => {\r\n        switch (route.params.item) {\r\n          case 'Restaurant':\r\n            category.value = '餐飲';\r\n            categoryColor.value = 'text-accent';\r\n            break;\r\n          case 'Hotel':\r\n            category.value = '住宿';\r\n            categoryColor.value = 'text-secondary';\r\n            break;\r\n          case 'Activity':\r\n            category.value = '活動';\r\n            categoryColor.value = 'text-primary';\r\n            break;\r\n          default:\r\n            category.value = '';\r\n            categoryColor.value = '';\r\n        }\r\n        const temp = res.data.filter((i) => i.Picture.PictureUrl1);\r\n        const random = temp.sort(() => Math.random() - 0.5);\r\n        const ary = random.slice(0, 10);\r\n        fooddata.value = ary;\r\n      });\r\n    };\r\n    watch(route, () => {\r\n      getCategoryCountry();\r\n    });\r\n    onMounted(() => {\r\n      getCategoryCountry();\r\n    });\r\n    return {\r\n      getCategoryCountry,\r\n      selectCategory,\r\n      selectLocation,\r\n      fooddata,\r\n      category,\r\n      categoryColor,\r\n    };\r\n  },\r\n};\r\n</script>\r\n","import { render } from \"./Result.vue?vue&type=template&id=cb541c1c\"\nimport script from \"./Result.vue?vue&type=script&lang=js\"\nexport * from \"./Result.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\yuski\\\\Desktop\\\\test\\\\quasarweb\\\\node_modules\\\\@vue\\\\cli-service\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QItem,QItemSection,QIcon,QCard,QCardSection});\n"],"sourceRoot":""}