{"version":3,"sources":["webpack:///./src/views/Result.vue","webpack:///./src/views/Result.vue?7a4a"],"names":["class","side","name","categoryColor","category","fooddata","item","style","key","ID","src","Picture","PictureUrl1","Name","City","setup","route","selectCategory","selectLocation","axios","getCategoryCountry","get","params","city","then","res","value","temp","data","filter","i","random","sort","Math","ary","slice","__exports__","render","QItem","QItemSection","QIcon","QCard","QCardSection"],"mappings":"iIAOOA,MAAM,uD,aAOAA,MAAM,kB,GAEHA,MAAM,e,uOAfpB,eAKS,Q,wBAJP,iBAEiB,CAFjB,eAEiB,GAFDC,KAAA,IAAI,C,wBAClB,iBAAuD,CAAvD,eAAuD,GAA/CC,KAAK,SAAUF,MAAK,eAAE,EAAAG,gB,4BAEhC,eAA6D,GAA7CH,MAAM,WAAS,C,wBAAC,iBAAY,C,8BAAV,EAAAI,UAAQ,O,gBAE5C,eAaM,MAbN,EAaM,E,mBAZJ,eAWS,2BAV4B,EAAAC,UAAQ,SAAhBC,G,wBAD7B,eAWS,GAXDN,MAAM,+BACdO,MAAA,iBAAgDC,IAAKF,EAAKG,I,yBACxD,iBAC8D,CAD9D,eAC8D,OADxDC,IAAKJ,EAAKK,QAAQC,YACxBL,MAAA,gE,UACA,eAMiB,Q,wBALf,iBAA2B,CAA3B,eAA2B,0BAAlBD,EAAKO,MAAI,GAClB,eAGM,MAHN,EAGM,CAFJ,eAAmD,GAA3CX,KAAK,QAAQF,MAAM,iBAC3B,eAA8C,OAA9C,EAA8C,eAAlBM,EAAKQ,MAAI,S,kGAgBhC,GACbC,MADa,WAEX,IAAMC,EAAQ,iBACRC,EAAiB,eAAI,MACrBC,EAAiB,eAAI,MACrBb,EAAW,eAAI,IACfD,EAAW,eAAI,MACfD,EAAgB,eAAI,MACpBgB,EAAQ,eAAO,SACfC,EAAqB,WACzBD,EAAME,IAAN,uDAA0DL,EAAMM,OAAOhB,KAAvE,YAA+EU,EAAMM,OAAOC,OAAQC,MAAK,SAACC,GACxG,OAAQT,EAAMM,OAAOhB,MACnB,IAAK,aACHF,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,cACtB,MACF,IAAK,QACHtB,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,iBACtB,MACF,IAAK,WACHtB,EAASsB,MAAQ,KACjBvB,EAAcuB,MAAQ,eACtB,MACF,QACEtB,EAASsB,MAAQ,GACjBvB,EAAcuB,MAAQ,GAE1B,IAAMC,EAAOF,EAAIG,KAAKC,QAAO,SAACC,GAAD,OAAOA,EAAEnB,QAAQC,eACxCmB,EAASJ,EAAKK,MAAK,kBAAMC,KAAKF,SAAW,MACzCG,EAAMH,EAAOI,MAAM,EAAG,IAC5B9B,EAASqB,MAAQQ,MASrB,OANA,eAAMlB,GAAO,WACXI,OAEF,gBAAU,WACRA,OAEK,CACLA,qBACAH,iBACAC,iBACAb,WACAD,WACAD,mB,sGCzEN,MAAMiC,EAA2B,IAAgB,EAAQ,CAAC,CAAC,SAASC,KAErD,eAOf,IAAS,EAAQ,aAAc,CAACC,QAAA,KAAMC,eAAA,KAAaC,QAAA,KAAMC,QAAA,KAAMC,eAAA","file":"js/about.0ce9919a.js","sourcesContent":["<template>\n  <q-item>\n    <q-item-section side>\n      <q-icon name=\"square\" :class=\"categoryColor\" ></q-icon>\n    </q-item-section>\n    <q-item-section class=\"text-h6\">{{category}}</q-item-section>\n  </q-item>\n  <div class=\"q-pa-md row justify-between items-start q-gutter-md\">\n    <q-card class=\"my-card drop-shadow col-md-2\"\n    style=\"height:243px;\" v-for=\"item in fooddata\" :key=\"item.ID\">\n      <img :src=\"item.Picture.PictureUrl1\"\n      style=\"height:137px;object-fit: cover;border:12px solid #fff\">\n      <q-card-section>\n        <div >{{ item.Name }}</div>\n        <div class=\"text-subtitle2\">\n          <q-icon name=\"place\" class=\"text-primary\"></q-icon>\n          <span class=\"text-accent\">{{item.City}}</span>\n        </div>\n      </q-card-section>\n    </q-card>\n  </div>\n</template>\n\n<script>\nimport {\n  ref,\n  onMounted,\n  inject,\n  watch,\n} from 'vue';\nimport { useRoute } from 'vue-router';\n\nexport default {\n  setup() {\n    const route = useRoute();\n    const selectCategory = ref(null);\n    const selectLocation = ref(null);\n    const fooddata = ref({});\n    const category = ref(null);\n    const categoryColor = ref(null);\n    const axios = inject('axios');// inject axios\n    const getCategoryCountry = () => {\n      axios.get(`https://ptx.transportdata.tw/MOTC/v2/Tourism/${route.params.item}/${route.params.city}`).then((res) => {\n        switch (route.params.item) {\n          case 'Restaurant':\n            category.value = '餐飲';\n            categoryColor.value = 'text-accent';\n            break;\n          case 'Hotel':\n            category.value = '住宿';\n            categoryColor.value = 'text-secondary';\n            break;\n          case 'Activity':\n            category.value = '活動';\n            categoryColor.value = 'text-primary';\n            break;\n          default:\n            category.value = '';\n            categoryColor.value = '';\n        }\n        const temp = res.data.filter((i) => i.Picture.PictureUrl1);\n        const random = temp.sort(() => Math.random() - 0.5);\n        const ary = random.slice(0, 10);\n        fooddata.value = ary;\n      });\n    };\n    watch(route, () => {\n      getCategoryCountry();\n    });\n    onMounted(() => {\n      getCategoryCountry();\n    });\n    return {\n      getCategoryCountry,\n      selectCategory,\n      selectLocation,\n      fooddata,\n      category,\n      categoryColor,\n    };\n  },\n};\n</script>\n","import { render } from \"./Result.vue?vue&type=template&id=dc3c22a0\"\nimport script from \"./Result.vue?vue&type=script&lang=js\"\nexport * from \"./Result.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"C:\\\\Users\\\\yuski\\\\Desktop\\\\test\\\\quasarweb\\\\node_modules\\\\vue-loader-v16\\\\dist\\\\exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__\nimport QItem from 'quasar/src/components/item/QItem.js';\nimport QItemSection from 'quasar/src/components/item/QItemSection.js';\nimport QIcon from 'quasar/src/components/icon/QIcon.js';\nimport QCard from 'quasar/src/components/card/QCard.js';\nimport QCardSection from 'quasar/src/components/card/QCardSection.js';\nimport qInstall from \"../../node_modules/vue-cli-plugin-quasar/lib/runtime.auto-import.js\";\nqInstall(script, 'components', {QItem,QItemSection,QIcon,QCard,QCardSection});\n"],"sourceRoot":""}